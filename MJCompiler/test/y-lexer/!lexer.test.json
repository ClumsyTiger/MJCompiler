// IMPORTANT: all paths here should be relative to this (test batch) file!
{
    "BatchName": "Lexer tests",
    "TestGroupList": [
        {
            "TestGroupName": "All keywords 1",
            "FilePath": "./all-keywords-1.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [],
        },
        {
            "TestGroupName": "All keywords 2",
            "FilePath": "./all-keywords-2.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [],
        },
        {
            "TestGroupName": "Lexer errors",
            "FilePath": "./lexer-error.mj",
            "ExCompileOutput": [
                "Ln 3   Col 13  SYN     Bad variable name",
                "```= 0```",
                "Ln 3   Col 30  LEX     Bad token",
                "```2dva```",
                "Ln 3   Col 24  SYN     Bad variable name",
                "```=123```",
                "Ln 3   Col 30  SYN     Bad variable name",
                "```2dva = 2```",
                "Ln 3   Col 43  SYN     Bad variable name",
                "```*```",
                "Ln 4   Col 8   LEX     Bad token",
                "```#```",
                "Ln 4   Col 8   SYN     Bad variable type",
                "```#```",
                "Ln 4   Col 12  SYN     Bad variable name",
                "```=5-```",
                "Ln 5   Col 13  SYN     Bad variable name",
                "```6]```",
                "Ln 8   Col 19  SYN     Bad initialization",
                "```-1```",
                "Ln 10  Col 10  SYN     Bad class declaration",
                "```/Predmet Predmet extends extends A```",
                "Ln 13  Col 24  LEX     Bad token",
                "```#```",
                "Ln 13  Col 19  SYN     Bad variable name",
                "```= 5```",
                "Ln 13  Col 24  SYN     Bad variable name",
                "```#aslkd = 12```",
                "Ln 13  Col 37  SYN     Bad variable name",
                "```123```",
                "Ln 14  Col 13  SYN     Bad variable type",
                "```123,```",
                "Ln 20  Col 8   LEX     Bad token",
                "```'```",
                "Ln 20  Col 8   SYN     Bad variable type",
                "```'```",
                "Ln 20  Col 15  SYN     Bad variable name",
                "```7]```",
                "Ln 21  Col 19  SYN     Bad initialization",
                "```-8```",
                "Ln 24  Col 8   LEX     Bad token",
                "```@```",
                "Ln 24  Col 8   SYN     Bad variable type",
                "```@```",
                "Ln 24  Col 18  LEX     Bad token",
                "```1z```",
                "Ln 26  Col 16  LEX     Bad token",
                "```#```",
                "Ln 24  Col 13  SYN     Bad variable name",
                "```(int 1z)",
                "    {",
                "        z = z + # + 1321 + 123```",
                "Ln 27  Col 8   SYN     Bad variable name",
                "```if( z > 0 && z >> 1 ) return -1```",
                "Ln 28  Col 8   SYN     Bad variable name",
                "```return z```",
                "Ln 29  Col 4   SYN     Bad variable type",
                "```}```",
                "Ln 31  Col 8   SYN     Bad variable name",
                "```sumB(int z```",
                "Ln 31  Col 25  SYN     Bad variable name",
                "```d```",
                "Ln 31  Col 34  SYN     Bad variable name",
                "```c```",
                "Ln 31  Col 41  SYN     Bad variable name",
                "```d[])",
                "    {",
                "        sumA( 15```",
                "Ln 33  Col 21  LEX     Bad token",
                "```#```",
                "Ln 33  Col 21  SYN     Bad variable name",
                "```# )```",
                "Ln 34  Col 12  SYN     Bad variable type",
                "```( , );```",
                "Ln 35  Col 12  SYN     Bad variable name",
                "```(```",
                "Ln 35  Col 16  SYN     Bad variable name",
                "```,```",
                "Ln 35  Col 18  SYN     Bad variable name",
                "```)```",
                "Ln 36  Col 8   SYN     Bad variable name",
                "```return z +* d + e```",
                "Ln 37  Col 4   SYN     Bad variable type",
                "```}",
                "",
                "    void```",
                "Ln 39  Col 13  SYN     Fatal error detected, parsing stopped",
                "```(```",
                "",
                "Lexer: 8   Syntax: 33  Semantic: 0  ",
                "",
            ],
            "ExExitCode": -1,
            "TestUnitList": [],
        },
    ]
}

