// IMPORTANT: all paths here should be relative to this (test batch) file!
{
    "BatchName": "Class tests",
    "TestGroupList": [
        {
            "TestGroupName": "Record-member compilation",
            "FilePath": "./record-member.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Record-member input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "true",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Class-member-1 compilation",
            "FilePath": "./class-member-1.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Class-member-1 input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "true",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Class-member-2 compilation",
            "FilePath": "./class-member-2.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Class-member-2 input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "3 2 1 ",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Class-static compilation",
            "FilePath": "./class-static.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Class-static input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "4 4 4",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Polymorphism compilation",
            "FilePath": "./polymorphism.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Polymorphism input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "A::foo",
                        "+A::f1",
                        "+A::f2",
                        "",
                        "A::foo",
                        "+B::f1",
                        "+A::f2",
                        "",
                        "A::foo",
                        "+C::f1",
                        "+C::f2",
                        "",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Designator compilation",
            "FilePath": "./designator.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Designator input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "5",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Designator error",
            "FilePath": "./designator-error.mj",
            "ExCompileOutput": [],
            "ExExitCode": -1,
        },
        {
            "TestGroupName": "Class and record declaration error",
            "FilePath": "./declaration-error.mj",
            "ExCompileOutput": [
                "Ln 4   Col 7   SYN     Bad record declaration",
                "```()rec ordR```",
                "Ln 9   Col 7   LEX     Bad token",
                "```0A```",
                "Ln 9   Col 6   SYN     Bad class declaration",
                "```*0A```",
                "Ln 12  Col 11  SYN     Bad variable name",
                "```( R r )",
                "    {",
                "        print('f')```",
                "Ln 14  Col 19  SYN     Bad variable name",
                "```print('a')```",
                "Ln 14  Col 30  SYN     Bad variable name",
                "```print('l')```",
                "Ln 14  Col 41  SYN     Bad variable name",
                "```print('s')```",
                "Ln 14  Col 52  SYN     Bad variable name",
                "```print('e')```",
                "Ln 14  Col 63  SYN     Bad variable name",
                "```print(eol)```",
                "Ln 16  Col 0   SYN     Bad variable type",
                "```}",
                "",
                "{",
                "    void```",
                "Ln 19  Col 13  SYN     Bad variable name",
                "```()",
                "        A a```",
                "Ln 23  Col 10  SYN     Bad variable type",
                "```= new```",
                "Ln 24  Col 10  SYN     Bad variable type",
                "```= new```",
                "Ln 25  Col 9   SYN     Bad variable type",
                "```.```",
                "Ln 25  Col 13  SYN     Bad variable name",
                "```( r )```",
                "Ln 26  Col 4   SYN     Couldn't repair and continue parse",
                "```}```",
                "",
                "Lexer: 1   Syntax: 15  Semantic: 0  ",
                "",
            ],
            "ExExitCode": -1,
            "TestUnitList": [],
        },
        {
            "TestGroupName": "Name clashing",
            "FilePath": "./name-clashing-error.mj",
            "ExCompileOutput": [
                "Ln 4   Col 7   SEM     Illegal 'static' modifier use -- only class fields can be static",
                "```int```",
                "Ln 8   Col 15  SEM     A symbol with the same name already exists",
                "```__name_clashing_error__```",
                "Ln 12  Col 8   SEM     A symbol with the same name already exists",
                "```__name_clashing_error__```",
                "Ln 19  Col 12  SEM     This designator must be of type int to be incremented/decremented",
                "```b```",
                "Ln 20  Col 12  SEM     This designator must be of type int to be incremented/decremented",
                "```c```",
                "Ln 21  Col 12  SEM     This designator is not assignable to",
                "```__name_clashing_error__```",
                "Ln 22  Col 12  SEM     This designator is not an lvalue and cannot be incremented/decremented",
                "```__name_clashing_error__```",
                "Ln 23  Col 12  SEM     The left side of the brackets is not an array",
                "```__name_clashing_error__```",
                "Ln 28  Col 16  SEM     Expected type here, but this symbol has not been declared",
                "```Heyy```",
                "Ln 30  Col 4   SEM     A symbol with the same name already exists",
                "```a```",
                "Ln 34  Col 11  SEM     Illegal 'static' modifier use -- only class fields can be static",
                "```int```",
                "Ln 35  Col 8   SEM     A symbol with the same name already exists",
                "```__name_clashing_error__```",
                "Ln 40  Col 12  SEM     A symbol with the same name already exists",
                "```__name_clashing_error__```",
                "Ln 42  Col 32  SEM     A symbol with the same name already exists",
                "```__name_clashing_error__```",
                "Ln 44  Col 8   SEM     This designator is not assignable to",
                "```__name_clashing_error__```",
                "Ln 45  Col 8   SEM     This non-static class/record member cannot be accessed in a static way",
                "```__name_clashing_error__```",
                "",
                "Lexer: 0   Syntax: 0   Semantic: 16 ",
                "",
            ],
            "ExExitCode": -1,
            "TestUnitList": [],
        },
    ]
}

