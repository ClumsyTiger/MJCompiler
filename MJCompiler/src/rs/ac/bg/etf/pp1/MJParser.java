
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Tue Aug 03 22:00:42 CEST 2021
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;
import org.apache.log4j.*;
import rs.ac.bg.etf.pp1.ast.*;

/** CUP v0.10k generated parser.
  * @version Tue Aug 03 22:00:42 CEST 2021
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\162\000\002\002\004\000\002\003\005\000\002\003" +
    "\006\000\002\004\003\000\002\004\004\000\002\005\003" +
    "\000\002\005\003\000\002\005\003\000\002\006\005\000" +
    "\002\006\007\000\002\007\004\000\002\007\005\000\002" +
    "\007\005\000\002\007\006\000\002\010\004\000\002\010" +
    "\005\000\002\011\003\000\002\011\004\000\002\012\010" +
    "\000\002\012\011\000\002\012\011\000\002\012\012\000" +
    "\002\012\011\000\002\012\012\000\002\012\012\000\002" +
    "\012\013\000\002\013\004\000\002\013\006\000\002\013" +
    "\006\000\002\013\010\000\002\014\003\000\002\014\004" +
    "\000\002\015\005\000\002\016\003\000\002\016\005\000" +
    "\002\016\005\000\002\016\007\000\002\017\006\000\002" +
    "\020\005\000\002\020\007\000\002\021\003\000\002\021" +
    "\004\000\002\022\004\000\002\022\007\000\002\022\011" +
    "\000\002\022\011\000\002\022\010\000\002\022\011\000" +
    "\002\022\004\000\002\022\004\000\002\022\004\000\002" +
    "\022\005\000\002\022\007\000\002\022\007\000\002\022" +
    "\011\000\002\022\004\000\002\022\005\000\002\023\005" +
    "\000\002\023\005\000\002\023\006\000\002\023\004\000" +
    "\002\023\004\000\002\024\005\000\002\024\006\000\002" +
    "\024\006\000\002\024\007\000\002\025\003\000\002\025" +
    "\005\000\002\026\003\000\002\026\005\000\002\027\003" +
    "\000\002\027\005\000\002\030\003\000\002\030\005\000" +
    "\002\031\003\000\002\031\007\000\002\032\003\000\002" +
    "\032\004\000\002\032\003\000\002\033\004\000\002\033" +
    "\005\000\002\034\003\000\002\034\005\000\002\035\003" +
    "\000\002\035\005\000\002\035\006\000\002\035\003\000" +
    "\002\035\004\000\002\035\007\000\002\035\005\000\002" +
    "\036\003\000\002\036\004\000\002\037\004\000\002\037" +
    "\005\000\002\037\005\000\002\037\006\000\002\040\003" +
    "\000\002\040\003\000\002\040\003\000\002\041\003\000" +
    "\002\041\003\000\002\042\003\000\002\043\003\000\002" +
    "\044\003\000\002\044\003\000\002\044\003\000\002\044" +
    "\003\000\002\044\003\000\002\044\003\000\002\045\003" +
    "\000\002\045\003\000\002\046\003\000\002\046\003\000" +
    "\002\046\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\334\000\004\004\005\001\002\000\004\002\336\001" +
    "\002\000\004\064\006\001\002\000\012\005\021\010\020" +
    "\051\010\064\011\001\002\000\004\064\325\001\002\000" +
    "\010\011\057\052\063\064\011\001\002\000\056\026\uff9c" +
    "\027\uff9c\030\uff9c\031\uff9c\032\uff9c\033\uff9c\034\uff9c\035" +
    "\uff9c\036\uff9c\037\uff9c\040\uff9c\041\uff9c\042\uff9c\046\uff9c" +
    "\047\uff9c\051\uff9c\054\uff9c\055\uff9c\056\uff9c\057\uff9c\060" +
    "\uff9c\064\uff9c\001\002\000\012\005\021\010\020\051\ufffe" +
    "\064\011\001\002\000\012\005\ufffb\010\ufffb\051\ufffb\064" +
    "\ufffb\001\002\000\012\005\ufffa\010\ufffa\051\ufffa\064\ufffa" +
    "\001\002\000\004\002\000\001\002\000\004\051\010\001" +
    "\002\000\012\005\ufffc\010\ufffc\051\ufffc\064\ufffc\001\002" +
    "\000\004\064\011\001\002\000\004\064\022\001\002\000" +
    "\006\007\024\051\023\001\002\000\010\051\010\052\033" +
    "\064\011\001\002\000\004\064\011\001\002\000\012\005" +
    "\ufff9\010\ufff9\051\ufff9\064\ufff9\001\002\000\004\051\023" +
    "\001\002\000\012\005\ufff8\010\ufff8\051\ufff8\064\ufff8\001" +
    "\002\000\006\051\010\052\037\001\002\000\010\051\uffe3" +
    "\052\uffe3\064\011\001\002\000\004\052\034\001\002\000" +
    "\012\005\ufff7\010\ufff7\051\ufff7\064\ufff7\001\002\000\012" +
    "\005\ufff6\010\ufff6\051\ufff6\064\ufff6\001\002\000\006\051" +
    "\uffe2\052\uffe2\001\002\000\004\052\040\001\002\000\012" +
    "\005\ufff5\010\ufff5\051\ufff5\064\ufff5\001\002\000\012\005" +
    "\ufff4\010\ufff4\051\ufff4\064\ufff4\001\002\000\004\064\043" +
    "\001\002\000\004\046\053\001\002\000\004\033\044\001" +
    "\002\000\010\061\050\062\047\063\045\001\002\000\050" +
    "\026\uffa0\027\uffa0\030\uffa0\031\uffa0\032\uffa0\033\uffa0\034" +
    "\uffa0\035\uffa0\036\uffa0\037\uffa0\040\uffa0\041\uffa0\042\uffa0" +
    "\046\uffa0\047\uffa0\054\uffa0\056\uffa0\057\uffa0\060\uffa0\001" +
    "\002\000\006\046\uffdb\047\051\001\002\000\050\026\uff9f" +
    "\027\uff9f\030\uff9f\031\uff9f\032\uff9f\033\uff9f\034\uff9f\035" +
    "\uff9f\036\uff9f\037\uff9f\040\uff9f\041\uff9f\042\uff9f\046\uff9f" +
    "\047\uff9f\054\uff9f\056\uff9f\057\uff9f\060\uff9f\001\002\000" +
    "\050\026\uffa1\027\uffa1\030\uffa1\031\uffa1\032\uffa1\033\uffa1" +
    "\034\uffa1\035\uffa1\036\uffa1\037\uffa1\040\uffa1\041\uffa1\042" +
    "\uffa1\046\uffa1\047\uffa1\054\uffa1\056\uffa1\057\uffa1\060\uffa1" +
    "\001\002\000\004\064\043\001\002\000\004\046\uffda\001" +
    "\002\000\012\005\uffdc\010\uffdc\051\uffdc\064\uffdc\001\002" +
    "\000\004\002\uffff\001\002\000\004\051\ufffd\001\002\000" +
    "\004\064\066\001\002\000\004\064\uff9e\001\002\000\004" +
    "\064\uff9d\001\002\000\004\052\065\001\002\000\010\011" +
    "\057\052\ufff1\064\011\001\002\000\006\002\ufff3\052\ufff3" +
    "\001\002\000\004\052\ufff0\001\002\000\006\002\ufff2\052" +
    "\ufff2\001\002\000\004\053\067\001\002\000\006\054\071" +
    "\064\011\001\002\000\004\064\316\001\002\000\006\051" +
    "\306\064\011\001\002\000\004\054\073\001\002\000\006" +
    "\051\075\064\011\001\002\000\004\051\301\001\002\000" +
    "\030\012\112\014\102\016\114\017\103\020\104\021\077" +
    "\024\111\025\110\051\076\052\113\064\105\001\002\000" +
    "\030\012\112\014\102\016\114\017\103\020\104\021\077" +
    "\024\111\025\110\051\076\052\277\064\105\001\002\000" +
    "\026\012\112\014\102\016\114\017\103\020\104\021\077" +
    "\024\111\025\110\051\076\064\105\001\002\000\004\052" +
    "\267\001\002\000\012\043\260\044\261\045\256\053\262" +
    "\001\002\000\004\053\241\001\002\000\004\046\240\001" +
    "\002\000\024\023\122\026\130\027\121\046\236\053\135" +
    "\061\050\062\047\063\045\064\105\001\002\000\064\026" +
    "\uffa7\027\uffa7\030\uffa7\031\uffa7\032\uffa7\033\uffa7\034\uffa7" +
    "\035\uffa7\036\uffa7\037\uffa7\040\uffa7\041\uffa7\042\uffa7\043" +
    "\uffa7\044\uffa7\045\uffa7\046\uffa7\047\uffa7\050\226\053\uffa7" +
    "\054\uffa7\055\225\056\uffa7\057\uffa7\060\uffa7\001\002\000" +
    "\004\046\224\001\002\000\032\012\112\014\102\015\uffd9" +
    "\016\114\017\103\020\104\021\077\024\111\025\110\051" +
    "\076\052\uffd9\064\105\001\002\000\004\053\217\001\002" +
    "\000\004\053\207\001\002\000\004\053\116\001\002\000" +
    "\010\011\uffeb\052\uffeb\064\uffeb\001\002\000\004\046\115" +
    "\001\002\000\036\012\uffd1\013\uffd1\014\uffd1\015\uffd1\016" +
    "\uffd1\017\uffd1\020\uffd1\021\uffd1\022\uffd1\024\uffd1\025\uffd1" +
    "\051\uffd1\052\uffd1\064\uffd1\001\002\000\022\023\122\026" +
    "\130\027\121\053\135\061\050\062\047\063\045\064\105" +
    "\001\002\000\052\026\uffae\027\uffae\030\uffae\031\uffae\032" +
    "\uffae\033\uffae\034\uffae\035\uffae\036\uffae\037\uffae\040\uffae" +
    "\041\uffae\042\uffae\046\uffae\047\uffae\053\200\054\uffae\056" +
    "\uffae\057\uffae\060\uffae\001\002\000\050\026\uffb0\027\uffb0" +
    "\030\174\031\176\032\173\033\uffb0\034\uffb0\035\uffb0\036" +
    "\uffb0\037\uffb0\040\uffb0\041\uffb0\042\uffb0\046\uffb0\047\uffb0" +
    "\054\uffb0\056\uffb0\057\uffb0\060\uffb0\001\002\000\016\023" +
    "\uff93\053\uff93\061\uff93\062\uff93\063\uff93\064\uff93\001\002" +
    "\000\004\064\011\001\002\000\010\041\165\042\uffbb\054" +
    "\uffbb\001\002\000\034\033\uffb7\034\uffb7\035\uffb7\036\uffb7" +
    "\037\uffb7\040\uffb7\041\uffb7\042\uffb7\046\uffb7\047\uffb7\054" +
    "\uffb7\056\uffb7\057\161\001\002\000\024\033\151\034\152" +
    "\035\154\036\155\037\153\040\156\041\uffb9\042\uffb9\054" +
    "\uffb9\001\002\000\036\033\uffb3\034\uffb3\035\uffb3\036\uffb3" +
    "\037\uffb3\040\uffb3\041\uffb3\042\uffb3\046\uffb3\047\uffb3\054" +
    "\uffb3\056\uffb3\057\uffb3\060\uffb3\001\002\000\016\023\122" +
    "\053\135\061\050\062\047\063\045\064\105\001\002\000" +
    "\016\023\uff94\053\uff94\061\uff94\062\uff94\063\uff94\064\uff94" +
    "\001\002\000\006\042\145\054\uffbd\001\002\000\042\026" +
    "\130\027\121\033\uffb5\034\uffb5\035\uffb5\036\uffb5\037\uffb5" +
    "\040\uffb5\041\uffb5\042\uffb5\046\uffb5\047\uffb5\054\uffb5\056" +
    "\uffb5\057\uffb5\060\uffb5\001\002\000\004\054\140\001\002" +
    "\000\050\026\uffab\027\uffab\030\uffab\031\uffab\032\uffab\033" +
    "\uffab\034\uffab\035\uffab\036\uffab\037\uffab\040\uffab\041\uffab" +
    "\042\uffab\046\uffab\047\uffab\054\uffab\056\uffab\057\uffab\060" +
    "\uffab\001\002\000\022\023\122\026\130\027\121\053\135" +
    "\061\050\062\047\063\045\064\105\001\002\000\004\054" +
    "\137\001\002\000\050\026\uffa8\027\uffa8\030\uffa8\031\uffa8" +
    "\032\uffa8\033\uffa8\034\uffa8\035\uffa8\036\uffa8\037\uffa8\040" +
    "\uffa8\041\uffa8\042\uffa8\046\uffa8\047\uffa8\054\uffa8\056\uffa8" +
    "\057\uffa8\060\uffa8\001\002\000\026\012\112\014\102\016" +
    "\114\017\103\020\104\021\077\024\111\025\110\051\076" +
    "\064\105\001\002\000\036\012\uffd6\013\142\014\uffd6\015" +
    "\uffd6\016\uffd6\017\uffd6\020\uffd6\021\uffd6\022\uffd6\024\uffd6" +
    "\025\uffd6\051\uffd6\052\uffd6\064\uffd6\001\002\000\026\012" +
    "\112\014\102\016\114\017\103\020\104\021\077\024\111" +
    "\025\110\051\076\064\105\001\002\000\036\012\uffd5\013" +
    "\uffd5\014\uffd5\015\uffd5\016\uffd5\017\uffd5\020\uffd5\021\uffd5" +
    "\022\uffd5\024\uffd5\025\uffd5\051\uffd5\052\uffd5\064\uffd5\001" +
    "\002\000\036\033\uffb4\034\uffb4\035\uffb4\036\uffb4\037\uffb4" +
    "\040\uffb4\041\uffb4\042\uffb4\046\uffb4\047\uffb4\054\uffb4\056" +
    "\uffb4\057\uffb4\060\uffb4\001\002\000\022\023\122\026\130" +
    "\027\121\053\135\061\050\062\047\063\045\064\105\001" +
    "\002\000\004\054\uffbc\001\002\000\042\026\130\027\121" +
    "\033\uffb2\034\uffb2\035\uffb2\036\uffb2\037\uffb2\040\uffb2\041" +
    "\uffb2\042\uffb2\046\uffb2\047\uffb2\054\uffb2\056\uffb2\057\uffb2" +
    "\060\uffb2\001\002\000\036\033\uffb1\034\uffb1\035\uffb1\036" +
    "\uffb1\037\uffb1\040\uffb1\041\uffb1\042\uffb1\046\uffb1\047\uffb1" +
    "\054\uffb1\056\uffb1\057\uffb1\060\uffb1\001\002\000\022\023" +
    "\uff9a\026\uff9a\027\uff9a\053\uff9a\061\uff9a\062\uff9a\063\uff9a" +
    "\064\uff9a\001\002\000\022\023\uff99\026\uff99\027\uff99\053" +
    "\uff99\061\uff99\062\uff99\063\uff99\064\uff99\001\002\000\022" +
    "\023\uff96\026\uff96\027\uff96\053\uff96\061\uff96\062\uff96\063" +
    "\uff96\064\uff96\001\002\000\022\023\uff98\026\uff98\027\uff98" +
    "\053\uff98\061\uff98\062\uff98\063\uff98\064\uff98\001\002\000" +
    "\022\023\uff97\026\uff97\027\uff97\053\uff97\061\uff97\062\uff97" +
    "\063\uff97\064\uff97\001\002\000\022\023\uff95\026\uff95\027" +
    "\uff95\053\uff95\061\uff95\062\uff95\063\uff95\064\uff95\001\002" +
    "\000\022\023\122\026\130\027\121\053\135\061\050\062" +
    "\047\063\045\064\105\001\002\000\010\041\uffb8\042\uffb8" +
    "\054\uffb8\001\002\000\022\023\122\026\130\027\121\053" +
    "\135\061\050\062\047\063\045\064\105\001\002\000\004" +
    "\060\163\001\002\000\022\023\122\026\130\027\121\053" +
    "\135\061\050\062\047\063\045\064\105\001\002\000\032" +
    "\033\uffb6\034\uffb6\035\uffb6\036\uffb6\037\uffb6\040\uffb6\041" +
    "\uffb6\042\uffb6\046\uffb6\047\uffb6\054\uffb6\056\uffb6\001\002" +
    "\000\022\023\122\026\130\027\121\053\135\061\050\062" +
    "\047\063\045\064\105\001\002\000\006\042\uffba\054\uffba" +
    "\001\002\000\052\026\uffaa\027\uffaa\030\uffaa\031\uffaa\032" +
    "\uffaa\033\uffaa\034\uffaa\035\uffaa\036\uffaa\037\uffaa\040\uffaa" +
    "\041\uffaa\042\uffaa\046\uffaa\047\uffaa\054\uffaa\055\170\056" +
    "\uffaa\057\uffaa\060\uffaa\001\002\000\022\023\122\026\130" +
    "\027\121\053\135\061\050\062\047\063\045\064\105\001" +
    "\002\000\004\056\172\001\002\000\050\026\uffa9\027\uffa9" +
    "\030\uffa9\031\uffa9\032\uffa9\033\uffa9\034\uffa9\035\uffa9\036" +
    "\uffa9\037\uffa9\040\uffa9\041\uffa9\042\uffa9\046\uffa9\047\uffa9" +
    "\054\uffa9\056\uffa9\057\uffa9\060\uffa9\001\002\000\016\023" +
    "\uff90\053\uff90\061\uff90\062\uff90\063\uff90\064\uff90\001\002" +
    "\000\016\023\uff92\053\uff92\061\uff92\062\uff92\063\uff92\064" +
    "\uff92\001\002\000\016\023\122\053\135\061\050\062\047" +
    "\063\045\064\105\001\002\000\016\023\uff91\053\uff91\061" +
    "\uff91\062\uff91\063\uff91\064\uff91\001\002\000\042\026\uffaf" +
    "\027\uffaf\033\uffaf\034\uffaf\035\uffaf\036\uffaf\037\uffaf\040" +
    "\uffaf\041\uffaf\042\uffaf\046\uffaf\047\uffaf\054\uffaf\056\uffaf" +
    "\057\uffaf\060\uffaf\001\002\000\024\023\122\026\130\027" +
    "\121\053\135\054\202\061\050\062\047\063\045\064\105" +
    "\001\002\000\006\047\205\054\uffbf\001\002\000\050\026" +
    "\uffad\027\uffad\030\uffad\031\uffad\032\uffad\033\uffad\034\uffad" +
    "\035\uffad\036\uffad\037\uffad\040\uffad\041\uffad\042\uffad\046" +
    "\uffad\047\uffad\054\uffad\056\uffad\057\uffad\060\uffad\001\002" +
    "\000\004\054\204\001\002\000\050\026\uffac\027\uffac\030" +
    "\uffac\031\uffac\032\uffac\033\uffac\034\uffac\035\uffac\036\uffac" +
    "\037\uffac\040\uffac\041\uffac\042\uffac\046\uffac\047\uffac\054" +
    "\uffac\056\uffac\057\uffac\060\uffac\001\002\000\022\023\122" +
    "\026\130\027\121\053\135\061\050\062\047\063\045\064" +
    "\105\001\002\000\004\054\uffbe\001\002\000\022\023\122" +
    "\026\130\027\121\053\135\061\050\062\047\063\045\064" +
    "\105\001\002\000\006\047\211\054\212\001\002\000\004" +
    "\061\214\001\002\000\004\046\213\001\002\000\036\012" +
    "\uffcc\013\uffcc\014\uffcc\015\uffcc\016\uffcc\017\uffcc\020\uffcc" +
    "\021\uffcc\022\uffcc\024\uffcc\025\uffcc\051\uffcc\052\uffcc\064" +
    "\uffcc\001\002\000\004\054\215\001\002\000\004\046\216" +
    "\001\002\000\036\012\uffcb\013\uffcb\014\uffcb\015\uffcb\016" +
    "\uffcb\017\uffcb\020\uffcb\021\uffcb\022\uffcb\024\uffcb\025\uffcb" +
    "\051\uffcb\052\uffcb\064\uffcb\001\002\000\004\064\105\001" +
    "\002\000\004\054\221\001\002\000\004\046\222\001\002" +
    "\000\036\012\uffcd\013\uffcd\014\uffcd\015\uffcd\016\uffcd\017" +
    "\uffcd\020\uffcd\021\uffcd\022\uffcd\024\uffcd\025\uffcd\051\uffcd" +
    "\052\uffcd\064\uffcd\001\002\000\006\015\uffd8\052\uffd8\001" +
    "\002\000\036\012\uffd7\013\uffd7\014\uffd7\015\uffd7\016\uffd7" +
    "\017\uffd7\020\uffd7\021\uffd7\022\uffd7\024\uffd7\025\uffd7\051" +
    "\uffd7\052\uffd7\064\uffd7\001\002\000\022\023\122\026\130" +
    "\027\121\053\135\061\050\062\047\063\045\064\105\001" +
    "\002\000\004\064\230\001\002\000\060\026\uffa6\027\uffa6" +
    "\030\uffa6\031\uffa6\032\uffa6\033\uffa6\034\uffa6\035\uffa6\036" +
    "\uffa6\037\uffa6\040\uffa6\041\uffa6\042\uffa6\043\uffa6\044\uffa6" +
    "\045\uffa6\046\uffa6\047\uffa6\053\uffa6\054\uffa6\056\uffa6\057" +
    "\uffa6\060\uffa6\001\002\000\064\026\uffa5\027\uffa5\030\uffa5" +
    "\031\uffa5\032\uffa5\033\uffa5\034\uffa5\035\uffa5\036\uffa5\037" +
    "\uffa5\040\uffa5\041\uffa5\042\uffa5\043\uffa5\044\uffa5\045\uffa5" +
    "\046\uffa5\047\uffa5\050\226\053\uffa5\054\uffa5\055\225\056" +
    "\uffa5\057\uffa5\060\uffa5\001\002\000\060\026\uffa3\027\uffa3" +
    "\030\uffa3\031\uffa3\032\uffa3\033\uffa3\034\uffa3\035\uffa3\036" +
    "\uffa3\037\uffa3\040\uffa3\041\uffa3\042\uffa3\043\uffa3\044\uffa3" +
    "\045\uffa3\046\uffa3\047\uffa3\053\uffa3\054\uffa3\056\uffa3\057" +
    "\uffa3\060\uffa3\001\002\000\004\056\233\001\002\000\064" +
    "\026\uffa4\027\uffa4\030\uffa4\031\uffa4\032\uffa4\033\uffa4\034" +
    "\uffa4\035\uffa4\036\uffa4\037\uffa4\040\uffa4\041\uffa4\042\uffa4" +
    "\043\uffa4\044\uffa4\045\uffa4\046\uffa4\047\uffa4\050\226\053" +
    "\uffa4\054\uffa4\055\225\056\uffa4\057\uffa4\060\uffa4\001\002" +
    "\000\060\026\uffa2\027\uffa2\030\uffa2\031\uffa2\032\uffa2\033" +
    "\uffa2\034\uffa2\035\uffa2\036\uffa2\037\uffa2\040\uffa2\041\uffa2" +
    "\042\uffa2\043\uffa2\044\uffa2\045\uffa2\046\uffa2\047\uffa2\053" +
    "\uffa2\054\uffa2\056\uffa2\057\uffa2\060\uffa2\001\002\000\004" +
    "\046\237\001\002\000\036\012\uffcf\013\uffcf\014\uffcf\015" +
    "\uffcf\016\uffcf\017\uffcf\020\uffcf\021\uffcf\022\uffcf\024\uffcf" +
    "\025\uffcf\051\uffcf\052\uffcf\064\uffcf\001\002\000\036\012" +
    "\uffce\013\uffce\014\uffce\015\uffce\016\uffce\017\uffce\020\uffce" +
    "\021\uffce\022\uffce\024\uffce\025\uffce\051\uffce\052\uffce\064" +
    "\uffce\001\002\000\036\012\uffd0\013\uffd0\014\uffd0\015\uffd0" +
    "\016\uffd0\017\uffd0\020\uffd0\021\uffd0\022\uffd0\024\uffd0\025" +
    "\uffd0\051\uffd0\052\uffd0\064\uffd0\001\002\000\022\023\122" +
    "\026\130\027\121\053\135\061\050\062\047\063\045\064" +
    "\105\001\002\000\004\054\243\001\002\000\004\051\244" +
    "\001\002\000\006\015\245\052\246\001\002\000\004\061" +
    "\251\001\002\000\036\012\uffd3\013\uffd3\014\uffd3\015\uffd3" +
    "\016\uffd3\017\uffd3\020\uffd3\021\uffd3\022\uffd3\024\uffd3\025" +
    "\uffd3\051\uffd3\052\uffd3\064\uffd3\001\002\000\004\052\250" +
    "\001\002\000\036\012\uffd2\013\uffd2\014\uffd2\015\uffd2\016" +
    "\uffd2\017\uffd2\020\uffd2\021\uffd2\022\uffd2\024\uffd2\025\uffd2" +
    "\051\uffd2\052\uffd2\064\uffd2\001\002\000\004\060\252\001" +
    "\002\000\032\012\112\014\102\015\245\016\114\017\103" +
    "\020\104\021\077\024\111\025\110\051\076\052\uffc3\064" +
    "\105\001\002\000\004\052\uffc1\001\002\000\006\015\245" +
    "\052\uffc2\001\002\000\004\052\uffc0\001\002\000\004\046" +
    "\uffc4\001\002\000\022\023\122\026\130\027\121\053\135" +
    "\061\050\062\047\063\045\064\105\001\002\000\022\023" +
    "\uff9b\026\uff9b\027\uff9b\053\uff9b\061\uff9b\062\uff9b\063\uff9b" +
    "\064\uff9b\001\002\000\004\046\uffc5\001\002\000\024\023" +
    "\122\026\130\027\121\053\135\054\263\061\050\062\047" +
    "\063\045\064\105\001\002\000\004\046\uffc7\001\002\000" +
    "\004\054\265\001\002\000\004\046\uffc6\001\002\000\004" +
    "\046\uffc8\001\002\000\010\011\uffea\052\uffea\064\uffea\001" +
    "\002\000\004\022\271\001\002\000\004\053\272\001\002" +
    "\000\022\023\122\026\130\027\121\053\135\061\050\062" +
    "\047\063\045\064\105\001\002\000\004\054\274\001\002" +
    "\000\004\046\275\001\002\000\036\012\uffd4\013\uffd4\014" +
    "\uffd4\015\uffd4\016\uffd4\017\uffd4\020\uffd4\021\uffd4\022\uffd4" +
    "\024\uffd4\025\uffd4\051\uffd4\052\uffd4\064\uffd4\001\002\000" +
    "\004\052\300\001\002\000\036\012\uffca\013\uffca\014\uffca" +
    "\015\uffca\016\uffca\017\uffca\020\uffca\021\uffca\022\uffca\024" +
    "\uffca\025\uffca\051\uffca\052\uffca\064\uffca\001\002\000\036" +
    "\012\uffc9\013\uffc9\014\uffc9\015\uffc9\016\uffc9\017\uffc9\020" +
    "\uffc9\021\uffc9\022\uffc9\024\uffc9\025\uffc9\051\uffc9\052\uffc9" +
    "\064\uffc9\001\002\000\030\012\112\014\102\016\114\017" +
    "\103\020\104\021\077\024\111\025\110\051\076\052\303" +
    "\064\105\001\002\000\004\052\304\001\002\000\010\011" +
    "\uffe9\052\uffe9\064\uffe9\001\002\000\010\011\uffe8\052\uffe8" +
    "\064\uffe8\001\002\000\004\051\312\001\002\000\030\012" +
    "\112\014\102\016\114\017\103\020\104\021\077\024\111" +
    "\025\110\051\076\052\310\064\105\001\002\000\004\052" +
    "\311\001\002\000\010\011\uffef\052\uffef\064\uffef\001\002" +
    "\000\010\011\uffee\052\uffee\064\uffee\001\002\000\030\012" +
    "\112\014\102\016\114\017\103\020\104\021\077\024\111" +
    "\025\110\051\076\052\314\064\105\001\002\000\004\052" +
    "\315\001\002\000\010\011\uffed\052\uffed\064\uffed\001\002" +
    "\000\010\011\uffec\052\uffec\064\uffec\001\002\000\010\047" +
    "\317\054\uffe7\055\320\001\002\000\004\064\011\001\002" +
    "\000\004\056\321\001\002\000\006\047\322\054\uffe6\001" +
    "\002\000\004\064\011\001\002\000\004\054\uffe4\001\002" +
    "\000\004\054\uffe5\001\002\000\010\046\uffe0\047\331\055" +
    "\330\001\002\000\004\046\327\001\002\000\014\005\uffe1" +
    "\010\uffe1\051\uffe1\052\uffe1\064\uffe1\001\002\000\004\056" +
    "\333\001\002\000\004\064\325\001\002\000\004\046\uffde" +
    "\001\002\000\006\046\uffdf\047\334\001\002\000\004\064" +
    "\325\001\002\000\004\046\uffdd\001\002\000\004\002\001" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\334\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\004\015\005\011\006\013\010\014" +
    "\015\012\017\016\042\006\001\001\000\004\016\325\001" +
    "\001\000\012\011\060\012\061\041\055\042\057\001\001" +
    "\000\002\001\001\000\016\004\054\005\011\006\013\015" +
    "\012\017\016\042\006\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\010\053\001\001\000" +
    "\002\001\001\000\004\042\040\001\001\000\002\001\001" +
    "\000\004\007\024\001\001\000\012\010\031\014\027\015" +
    "\030\042\006\001\001\000\004\042\025\001\001\000\002" +
    "\001\001\000\004\007\026\001\001\000\002\001\001\000" +
    "\004\010\035\001\001\000\010\014\034\015\030\042\006" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\020\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\040\045\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\020\051\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\011\063\012\061\041\055\042\057\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\013\071\042\067\001\001\000\002\001" +
    "\001\000\010\014\304\015\030\042\006\001\001\000\002" +
    "\001\001\000\010\014\073\015\030\042\006\001\001\000" +
    "\002\001\001\000\012\021\077\022\106\023\105\036\100" +
    "\001\001\000\012\021\275\022\106\023\105\036\100\001" +
    "\001\000\010\022\267\023\105\036\100\001\001\000\002" +
    "\001\001\000\004\043\256\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\031\234\032\123\033\125\034\131" +
    "\035\117\036\116\040\133\045\126\001\001\000\004\037" +
    "\226\001\001\000\002\001\001\000\012\021\222\022\106" +
    "\023\105\036\100\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\026\132\027\130\030\122\031" +
    "\124\032\123\033\125\034\131\035\117\036\116\040\133" +
    "\045\126\001\001\000\002\001\001\000\004\046\174\001" +
    "\001\000\002\001\001\000\004\042\166\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\044\156\001\001\000" +
    "\002\001\001\000\012\034\146\035\117\036\116\040\133" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\143\045\126\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\031\135\032\123\033\125\034\131\035\117\036" +
    "\116\040\133\045\126\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\022\140\023\105\036\100\001\001\000" +
    "\002\001\001\000\010\022\142\023\105\036\100\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\026\145\027" +
    "\130\030\122\031\124\032\123\033\125\034\131\035\117" +
    "\036\116\040\133\045\126\001\001\000\002\001\001\000" +
    "\006\033\147\045\126\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\030\157" +
    "\031\124\032\123\033\125\034\131\035\117\036\116\040" +
    "\133\045\126\001\001\000\002\001\001\000\020\032\161" +
    "\033\125\034\131\035\117\036\116\040\133\045\126\001" +
    "\001\000\002\001\001\000\020\032\163\033\125\034\131" +
    "\035\117\036\116\040\133\045\126\001\001\000\002\001" +
    "\001\000\026\027\165\030\122\031\124\032\123\033\125" +
    "\034\131\035\117\036\116\040\133\045\126\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\031\170\032\123" +
    "\033\125\034\131\035\117\036\116\040\133\045\126\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\034\176\035\117\036\116\040" +
    "\133\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\025\202\031\200\032\123\033\125\034\131\035\117\036" +
    "\116\040\133\045\126\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\024\025" +
    "\205\031\200\032\123\033\125\034\131\035\117\036\116" +
    "\040\133\045\126\001\001\000\002\001\001\000\022\031" +
    "\207\032\123\033\125\034\131\035\117\036\116\040\133" +
    "\045\126\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\036\217\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\031\231\032\123\033" +
    "\125\034\131\035\117\036\116\040\133\045\126\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\037\230\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\037\233" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\031\241" +
    "\032\123\033\125\034\131\035\117\036\116\040\133\045" +
    "\126\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\246\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\021\253\022\106\023\105\024\252\036\100\001\001\000" +
    "\002\001\001\000\004\024\254\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\031\265\032\123\033\125\034" +
    "\131\035\117\036\116\040\133\045\126\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\025\263\031\200\032" +
    "\123\033\125\034\131\035\117\036\116\040\133\045\126" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\026\272\027\130\030\122\031" +
    "\124\032\123\033\125\034\131\035\117\036\116\040\133" +
    "\045\126\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\021\301\022\106\023\105\036\100\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\021\306\022\106\023\105\036" +
    "\100\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\021\312\022\106\023\105\036\100\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\013\323\042\067\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\013\322\042\067" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\331\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\334\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol symbol = this.getScanner().next_token();
	if( symbol != null && symbol.value != null )
    {
		logger.info( symbol.toString() + " " + symbol.value.toString() );
    }

	return symbol;

    }


	boolean errorDetected = false;
	Logger logger = Logger.getLogger( getClass() );
   
    // redefine cup parser methods for error reporting
    public void report_fatal_error( String message, Object info ) throws java.lang.Exception
    {
        done_parsing();
        report_error( message, info );
    }
  
    public void syntax_error( Symbol cur_token )
    {
        report_error( "\nSintaksna greska", cur_token );
    }
  
    public void unrecovered_syntax_error( Symbol cur_token ) throws java.lang.Exception
    {
        report_fatal_error( "Fatalna greska, parsiranje se ne moze nastaviti", cur_token );
    }

    public void report_error( String message, Object info )
    {
    	errorDetected = true;
    	StringBuilder msg = new StringBuilder( message );

    	if( info instanceof Symbol )
        {
            msg.append( " na liniji " ).append( ( ( Symbol )info ).left );
        }

        logger.error( msg.toString() );
    }
    
    public void report_info( String message, Object info )
    {
    	StringBuilder msg = new StringBuilder( message ); 

    	if( info instanceof Symbol )
        {
            msg.append( " na liniji " ).append( ( ( Symbol )info ).left );
        }

        logger.info( msg.toString() );
    }
    

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Mulop ::= perc 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Mulop ::= div 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Mulop ::= mul 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Addop ::= minus 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Addop ::= plus 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Relop ::= leq 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Relop ::= lt 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Relop ::= geq 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Relop ::= gt 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Relop ::= neq 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Relop ::= eq 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Assignop ::= assign 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*Assignop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Type ::= ident 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // MethodType ::= Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*MethodType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // MethodType ::= VOID_K 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*MethodType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Literal ::= bool_lit 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Literal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Literal ::= char_lit 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Literal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Literal ::= int_lit 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Literal*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // DesignatorTerm ::= lbracket Expr rbracket DesignatorTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // DesignatorTerm ::= dot ident DesignatorTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // DesignatorTerm ::= lbracket Expr rbracket 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // DesignatorTerm ::= dot ident 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Designator ::= ident DesignatorTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Designator ::= ident 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Factor ::= lparen Expr rparen 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Factor ::= NEW_K Type lbracket Expr rbracket 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Factor ::= NEW_K Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Factor ::= Literal 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Factor ::= Designator lparen ActPars rparen 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Factor ::= Designator lparen rparen 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Factor ::= Designator 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Term ::= Factor Mulop Term 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Term ::= Factor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // AdditionTerm ::= Addop Term AdditionTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*AdditionTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // AdditionTerm ::= Addop Term 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*AdditionTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Addition ::= AdditionTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*Addition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Addition ::= Term AdditionTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*Addition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Addition ::= Term 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*Addition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Expr ::= Addition qmark Addition colon Addition 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Expr ::= Addition 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // CondFact ::= Expr Relop CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // CondFact ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // CondTerm ::= CondFact and CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // CondTerm ::= CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Condition ::= CondTerm or Condition 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Condition ::= CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ActPars ::= Expr comma ActPars 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ActPars ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CaseList ::= CASE_K int_lit colon StatementList CaseList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*CaseList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CaseList ::= CASE_K int_lit colon CaseList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*CaseList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CaseList ::= CASE_K int_lit colon StatementList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*CaseList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // CaseList ::= CASE_K int_lit colon 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*CaseList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // DesignatorStatement ::= Designator minusminus 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // DesignatorStatement ::= Designator plusplus 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // DesignatorStatement ::= Designator lparen ActPars rparen 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // DesignatorStatement ::= Designator lparen rparen 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // DesignatorStatement ::= Designator Assignop Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Statement ::= lbrace StatementList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Statement ::= lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Statement ::= PRINT_K lparen Expr comma int_lit rparen semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Statement ::= PRINT_K lparen Expr rparen semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Statement ::= READ_K lparen Designator rparen semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Statement ::= RETURN_K Expr semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Statement ::= RETURN_K semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Statement ::= CONTINUE_K semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Statement ::= BREAK_K semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Statement ::= SWITCH_K lparen Expr rparen lbrace CaseList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Statement ::= SWITCH_K lparen Expr rparen lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Statement ::= DO_K Statement WHILE_K lparen Condition rparen semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Statement ::= IF_K lparen Condition rparen Statement ELSE_K Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Statement ::= IF_K lparen Condition rparen Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Statement ::= DesignatorStatement semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // StatementList ::= Statement StatementList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // StatementList ::= Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // IdentInitList ::= ident eq Literal comma IdentInitList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*IdentInitList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // IdentInitList ::= ident eq Literal 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*IdentInitList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ConstDecl ::= CONST_K Type IdentInitList semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // IdentList ::= ident lbracket rbracket comma IdentList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*IdentList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // IdentList ::= ident comma IdentList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*IdentList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // IdentList ::= ident lbracket rbracket 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*IdentList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // IdentList ::= ident 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*IdentList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // VarDecl ::= Type IdentList semicol 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // VarDeclList ::= VarDecl VarDeclList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // VarDeclList ::= VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // FormPars ::= Type ident lbracket rbracket comma FormPars 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // FormPars ::= Type ident comma FormPars 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // FormPars ::= Type ident lbracket rbracket 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // FormPars ::= Type ident 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // MethodDecl ::= MethodType ident lparen FormPars rparen VarDeclList lbrace StatementList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // MethodDecl ::= MethodType ident lparen FormPars rparen VarDeclList lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // MethodDecl ::= MethodType ident lparen FormPars rparen lbrace StatementList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // MethodDecl ::= MethodType ident lparen FormPars rparen lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // MethodDecl ::= MethodType ident lparen rparen VarDeclList lbrace StatementList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-7)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // MethodDecl ::= MethodType ident lparen rparen VarDeclList lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // MethodDecl ::= MethodType ident lparen rparen lbrace StatementList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // MethodDecl ::= MethodType ident lparen rparen lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // MethodDeclList ::= MethodDecl MethodDeclList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // MethodDeclList ::= MethodDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // MethodDeclScope ::= lbrace MethodDeclList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDeclScope*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // MethodDeclScope ::= lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*MethodDeclScope*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ClassDeclScope ::= lbrace VarDeclList MethodDeclScope rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDeclScope*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ClassDeclScope ::= lbrace VarDeclList rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDeclScope*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ClassDeclScope ::= lbrace MethodDeclScope rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDeclScope*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ClassDeclScope ::= lbrace rbrace 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ClassDeclScope*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ClassDecl ::= CLASS_K ident EXTENDS_K Type ClassDeclScope 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ClassDecl ::= CLASS_K ident ClassDeclScope 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ProgramDeclKind ::= ClassDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ProgramDeclKind*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ProgramDeclKind ::= VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ProgramDeclKind*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ProgramDeclKind ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*ProgramDeclKind*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ProgramDeclList ::= ProgramDeclKind ProgramDeclList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*ProgramDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ProgramDeclList ::= ProgramDeclKind 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*ProgramDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Program ::= PROGRAM_K ident ProgramDeclList MethodDeclScope 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= PROGRAM_K ident MethodDeclScope 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

