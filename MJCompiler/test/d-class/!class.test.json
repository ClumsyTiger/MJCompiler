// IMPORTANT: all paths here should be relative to this (test batch) file!
{
    "BatchName": "Class tests",
    "TestGroupList": [
        {
            "TestGroupName": "Record-member compilation",
            "FilePath": "./record-member.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Record-member input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "true",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Class-member-1 compilation",
            "FilePath": "./class-member-1.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Class-member-1 input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "true",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Class-member-2 compilation",
            "FilePath": "./class-member-2.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Class-member-2 input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "3 2 1 ",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Class-static compilation",
            "FilePath": "./class-static.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Class-static input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "4 4 4",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Polymorphism compilation",
            "FilePath": "./polymorphism.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Polymorphism input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "A::foo",
                        "+A::f1",
                        "+A::f2",
                        "",
                        "A::foo",
                        "+B::f1",
                        "+A::f2",
                        "",
                        "A::foo",
                        "+C::f1",
                        "+C::f2",
                        "",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Super compilation",
            "FilePath": "./super.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Super input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "A:",
                        "+a=5",
                        "A:",
                        "+a=5",
                        "+b=0",
                        "C:",
                        "+a=5",
                        "+b=6",
                        "D:",
                        "+a=0",
                        "+b=6",
                        "+d=7",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Designator compilation",
            "FilePath": "./designator.mj",
            "ExCompileOutput": [],
            "ExExitCode": 0,
            "TestUnitList": [
                {
                    "TestName": "Designator input 1",
                    "TestInput": [],
                    "ExTestOutput": [
                        "5",
                        "",
                    ],
                    "ExExitCode": 0,
                },
            ],
        },
        {
            "TestGroupName": "Class and record declaration errors",
            "FilePath": "./declaration-errors.mj",
            "ExCompileOutput": [
                "declaration-errors.mj:4:7: Syntax: Bad record declaration",
                "     3 | ",
                "   > 4 | record ()rec ordR",
                "       |        ^     *   ",
                "     5 | {",
                "",
                "declaration-errors.mj:9:7: Lexical: Bad token",
                "     8 | ",
                "   > 9 | class *0A",
                "       |        ^ ",
                "    10 | {",
                "",
                "declaration-errors.mj:9:6: Syntax: Bad class declaration",
                "     8 | ",
                "   > 9 | class *0A",
                "       |       ^* ",
                "    10 | {",
                "",
                "declaration-errors.mj:12:11: Syntax: Bad variable name",
                "    11 |     A a;",
                "  > 12 |     int foo( R r )",
                "       |            ^      ",
                "    13 |     {",
                "  * 14 |         print('f');print('a');print('l');print('s');print('e');print(eol);",
                "       |                  *                                                        ",
                "    15 |     }",
                "",
                "declaration-errors.mj:14:19: Syntax: Bad variable name",
                "    13 |     {",
                "  > 14 |         print('f');print('a');print('l');print('s');print('e');print(eol);",
                "       |                    ^        *                                             ",
                "    15 |     }",
                "",
                "declaration-errors.mj:14:30: Syntax: Bad variable name",
                "    13 |     {",
                "  > 14 |         print('f');print('a');print('l');print('s');print('e');print(eol);",
                "       |                               ^        *                                  ",
                "    15 |     }",
                "",
                "declaration-errors.mj:14:41: Syntax: Bad variable name",
                "    13 |     {",
                "  > 14 |         print('f');print('a');print('l');print('s');print('e');print(eol);",
                "       |                                          ^        *                       ",
                "    15 |     }",
                "",
                "declaration-errors.mj:14:52: Syntax: Bad variable name",
                "    13 |     {",
                "  > 14 |         print('f');print('a');print('l');print('s');print('e');print(eol);",
                "       |                                                     ^        *            ",
                "    15 |     }",
                "",
                "declaration-errors.mj:14:63: Syntax: Bad variable name",
                "    13 |     {",
                "  > 14 |         print('f');print('a');print('l');print('s');print('e');print(eol);",
                "       |                                                                ^        * ",
                "    15 |     }",
                "",
                "declaration-errors.mj:16:0: Syntax: Bad variable type",
                "    13 |     {",
                "    14 |         print('f');print('a');print('l');print('s');print('e');print(eol);",
                "    15 |     }",
                "  > 16 | }",
                "       | ^",
                "    17 | ",
                "    18 | {",
                "  * 19 |     void main()",
                "       |     *          ",
                "    20 |         A a;",
                "    21 |         R r;",
                "    22 |     {",
                "",
                "declaration-errors.mj:19:13: Syntax: Bad variable name",
                "    18 | {",
                "  > 19 |     void main()",
                "       |              ^ ",
                "  * 20 |         A a;",
                "       |           * ",
                "    21 |         R r;",
                "",
                "declaration-errors.mj:23:10: Syntax: Bad variable type",
                "    22 |     {",
                "  > 23 |         r = new R;",
                "       |           ^ *     ",
                "    24 |         a = new A;",
                "",
                "declaration-errors.mj:24:10: Syntax: Bad variable type",
                "    23 |         r = new R;",
                "  > 24 |         a = new A;",
                "       |           ^ *     ",
                "    25 |         a.foo( r );",
                "",
                "declaration-errors.mj:25:9: Syntax: Bad variable type",
                "    24 |         a = new A;",
                "  > 25 |         a.foo( r );",
                "       |          ^         ",
                "    26 |     }",
                "",
                "declaration-errors.mj:25:13: Syntax: Bad variable name",
                "    24 |         a = new A;",
                "  > 25 |         a.foo( r );",
                "       |              ^   * ",
                "    26 |     }",
                "",
                "declaration-errors.mj:26:4: Syntax: Fatal error detected, parsing stopped",
                "    25 |         a.foo( r );",
                "  > 26 |     }",
                "       |     ^",
                "    27 | }",
                "",
                "Lexical: 1   Syntax: 15  Semantic: 0  ",
                "",
            ],
            "ExExitCode": -1,
            "TestUnitList": [],
        },
        {
            "TestGroupName": "Name clashing errors",
            "FilePath": "./name-clashing-errors.mj",
            "ExCompileOutput": [
                "name-clashing-errors.mj:4:7: Semantic: Illegal 'static' modifier use -- only class fields can be static",
                "     3 | ",
                "   > 4 | static int a;",
                "       |        ^     ",
                "     5 | ",
                "",
                "name-clashing-errors.mj:8:15: Semantic: Variable/field cannot be added since a symbol with the same name already exists",
                "     7 | {",
                "   > 8 |     static int __name_clashing_error__;",
                "       |                ^                       ",
                "     9 |     int a;",
                "",
                "name-clashing-errors.mj:12:8: Semantic: Variable/field cannot be added since a symbol with the same name already exists",
                "    11 |     char c;",
                "  > 12 |     int __name_clashing_error__;",
                "       |         ^                       ",
                "    13 | ",
                "",
                "name-clashing-errors.mj:19:12: Semantic: This designator must be of type int to allow being incremented/decremented",
                "    18 |             print('f');print('a');print('l');print('s');print('e');print(eol);",
                "  > 19 |             b++;",
                "       |             ^   ",
                "    20 |             c--;",
                "",
                "name-clashing-errors.mj:20:12: Semantic: This designator must be of type int to allow being incremented/decremented",
                "    19 |             b++;",
                "  > 20 |             c--;",
                "       |             ^   ",
                "    21 |             __name_clashing_error__ = new int[5];",
                "",
                "name-clashing-errors.mj:21:12: Semantic: This designator is not assignable to",
                "    20 |             c--;",
                "  > 21 |             __name_clashing_error__ = new int[5];",
                "       |             ^                                    ",
                "    22 |             __name_clashing_error__++;",
                "",
                "name-clashing-errors.mj:22:12: Semantic: This designator is not an lvalue and cannot be incremented/decremented",
                "    21 |             __name_clashing_error__ = new int[5];",
                "  > 22 |             __name_clashing_error__++;",
                "       |             ^                         ",
                "    23 |             __name_clashing_error__[ 0 ]++;",
                "",
                "name-clashing-errors.mj:23:12: Semantic: The left side of the brackets is not an array",
                "    22 |             __name_clashing_error__++;",
                "  > 23 |             __name_clashing_error__[ 0 ]++;",
                "       |             ^                              ",
                "    24 |         }",
                "",
                "name-clashing-errors.mj:28:16: Semantic: Expected type here, but this symbol has not been declared",
                "    27 | ",
                "  > 28 | class C extends Heyy {}",
                "       |                 ^      ",
                "    29 | ",
                "",
                "name-clashing-errors.mj:30:4: Semantic: Variable/field cannot be added since a symbol with the same name already exists",
                "    29 | ",
                "  > 30 | int a;",
                "       |     ^ ",
                "    31 | ",
                "",
                "name-clashing-errors.mj:34:11: Semantic: Illegal 'static' modifier use -- only class fields can be static",
                "    33 | {",
                "  > 34 |     static int a;",
                "       |            ^     ",
                "    35 |     int __name_clashing_error__;",
                "",
                "name-clashing-errors.mj:35:8: Semantic: Variable/field cannot be added since a symbol with the same name already exists",
                "    34 |     static int a;",
                "  > 35 |     int __name_clashing_error__;",
                "       |         ^                       ",
                "    36 | }",
                "",
                "name-clashing-errors.mj:40:12: Semantic: Variable/field cannot be added since a symbol with the same name already exists",
                "    39 |     void main()",
                "  > 40 |         int __name_clashing_error__;",
                "       |             ^                       ",
                "    41 |         int a;",
                "",
                "name-clashing-errors.mj:42:32: Semantic: Variable/field cannot be added since a symbol with the same name already exists",
                "    41 |         int a;",
                "  > 42 |         __name_clashing_error__ __name_clashing_error__;",
                "       |                                 ^                       ",
                "    43 |     {",
                "",
                "name-clashing-errors.mj:44:8: Semantic: This designator is not assignable to",
                "    43 |     {",
                "  > 44 |         __name_clashing_error__ = new __name_clashing_error__;",
                "       |         ^                                                     ",
                "    45 |         __name_clashing_error__.foo();",
                "",
                "name-clashing-errors.mj:45:8: Semantic: This non-static class/record member cannot be accessed in a static way",
                "    44 |         __name_clashing_error__ = new __name_clashing_error__;",
                "  > 45 |         __name_clashing_error__.foo();",
                "       |         ^                             ",
                "    46 |     }",
                "",
                "Lexical: 0   Syntax: 0   Semantic: 16 ",
                "",
            ],
            "ExExitCode": -1,
            "TestUnitList": [],
        },
        {
            "TestGroupName": "Designator errors",
            "FilePath": "./designator-errors.mj",
            "ExCompileOutput": [
                "designator-errors.mj:9:8: Semantic: Cannot override, method's signature different from inherited method's signature",
                "     8 |     {",
                "   > 9 |         A( int a )",
                "       |         ^         ",
                "    10 |         {",
                "",
                "designator-errors.mj:11:12: Semantic: This static class/record member cannot be accessed in a non-static way",
                "    10 |         {",
                "  > 11 |             this.a = a;",
                "       |             ^          ",
                "    12 |             A.b = 6;",
                "",
                "designator-errors.mj:12:12: Semantic: This non-static class/record member cannot be accessed in a static way",
                "    11 |             this.a = a;",
                "  > 12 |             A.b = 6;",
                "       |             ^       ",
                "    13 |         }",
                "",
                "designator-errors.mj:32:8: Semantic: Cannot override, method's signature different from inherited method's signature",
                "    31 |         A foo() { return super; }",
                "  > 32 |         B bar( int a ) { B.a = a; return this; }",
                "       |         ^                                       ",
                "    33 |         void baz() { super.b = 5; b = 5; super(); }",
                "",
                "designator-errors.mj:28:12: Semantic: 'super()' must be the first statement in the constructor's scope",
                "    27 |             a = 1;",
                "  > 28 |             super();",
                "       |             ^       ",
                "    29 |         }",
                "",
                "designator-errors.mj:31:25: Semantic: 'super' can only be used to call the supertype's virtual methods or the constructor",
                "    30 | ",
                "  > 31 |         A foo() { return super; }",
                "       |                          ^       ",
                "    32 |         B bar( int a ) { B.a = a; return this; }",
                "",
                "designator-errors.mj:33:21: Semantic: 'super' cannot be used to access the inherited supertype's fields (use 'this' instead)",
                "    32 |         B bar( int a ) { B.a = a; return this; }",
                "  > 33 |         void baz() { super.b = 5; b = 5; super(); }",
                "       |                      ^                             ",
                "    34 |     }",
                "",
                "designator-errors.mj:33:41: Semantic: 'super()' can only be used inside the constructor",
                "    32 |         B bar( int a ) { B.a = a; return this; }",
                "  > 33 |         void baz() { super.b = 5; b = 5; super(); }",
                "       |                                          ^         ",
                "    34 |     }",
                "",
                "designator-errors.mj:40:8: Semantic: Function/method must have a return type",
                "    39 |     {",
                "  > 40 |         B() int a; {}",
                "       |         ^            ",
                "    41 | ",
                "",
                "designator-errors.mj:40:8: Semantic: Function/method cannot be added since a symbol with the same name already exists",
                "    39 |     {",
                "  > 40 |         B() int a; {}",
                "       |         ^            ",
                "    41 | ",
                "",
                "designator-errors.mj:44:14: Semantic: 'super()' must be the first statement in the constructor's scope",
                "    43 |         {",
                "  > 44 |             { super(); }",
                "       |               ^         ",
                "    45 |         }",
                "",
                "designator-errors.mj:50:18: Semantic: The specified class/record does not contain this member",
                "    49 |         C foo() { return this; }",
                "  > 50 |         C bar() { C.a = a; return this; }",
                "       |                   ^                      ",
                "    51 |     }",
                "",
                "designator-errors.mj:50:24: Semantic: This symbol has not been declared",
                "    49 |         C foo() { return this; }",
                "  > 50 |         C bar() { C.a = a; return this; }",
                "       |                         ^                ",
                "    51 |     }",
                "",
                "designator-errors.mj:1:0: Semantic: 'this' has no effect here (it must be inside a class declaration)",
                "   > 1 | program __designator_errors__",
                "       | ^                            ",
                "     2 | ",
                "",
                "designator-errors.mj:1:0: Semantic: 'super' has no effect here (it must be inside a class declaration)",
                "   > 1 | program __designator_errors__",
                "       | ^                            ",
                "     2 | ",
                "",
                "Lexical: 0   Syntax: 0   Semantic: 15 ",
                "",
            ],
            "ExExitCode": -1,
            "TestUnitList": [],
        },
    ]
}

