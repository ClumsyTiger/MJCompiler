// calculate the binomial coefficient, but separated into three different recursive calls
program recursionB
{
    int f1( int n, int k )
    {
        if( k == 0 ) { return 1; }
        if( k == 1 ) { return n; }

        if( n%2 == 0 ) return f1( n-1, k ) + f2( n-1, k-1 );
        else           return f2( n-1, k ) + f3( n-1, k-1 );
    }

    int f2( int n, int k )
        int n1, k1;
    {
        if( k == 0 ) { return 1; }
        if( k == 1 ) { return n; }
        n1 = n-1;
        k1 = k-1;
        return f2( n1, k ) + f3( n1, k1 );
    }

    int f3( int n, int k )
    {
        if( k == 0 ) { return 1; }
        if( k == 1 ) { return n; }
        n--; k--;
        return f3( n, k+1 ) + f1( n, k );
    }

    void main()
    {
        print( f1( 6, 3 ) ); print( ' ' );
        print( f2( 6, 3 ) ); print( ' ' );
        print( f3( 6, 4 ) ); print( eol );
        return;
    }
}
